name: Release the wheels to Github Release

on:
  push:
    branches: ['py_wheel']


jobs:
  build_wheels:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build 

      - name: Build package
        run: python -m build --wheel

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.python-version }}
          path: dist/

  test_artifacts:
    runs-on: [ubuntu-latest, windows-latest]
    needs: build_wheels

    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten wheel files
        shell: bash
        run: |
          mkdir all_wheels
          find dist -name '*.whl' -exec cp {} all_wheels/ \;

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install all_wheels/difi-7.2.0-py3-none-any.whl

      - name: Test installation
        shell: bash
        run: |
          python -c "import DIFI as difi; print(difi.__version__)"


  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build_wheels, test_artifacts]

    steps:

      - name: Upload wheels to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.whl
          draft: true
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            This release includes the following wheels:
            ${{ github.event.head_commit.message }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}